//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by slsvcutil, version 3.0.40818.0
// 
namespace WcfWebApp.Models
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfWebApp.Models")]
    public partial class User : object
    {
        
        private string EmailField;
        
        private int IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskList", Namespace="http://schemas.datacontract.org/2004/07/WcfWebApp.Models")]
    public partial class TaskList : object
    {
        
        private int IdField;
        
        private WcfWebApp.Models.Item[] ItemsField;
        
        private WcfWebApp.Models.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfWebApp.Models.Item[] Items
        {
            get
            {
                return this.ItemsField;
            }
            set
            {
                this.ItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfWebApp.Models.User User
        {
            get
            {
                return this.UserField;
            }
            set
            {
                this.UserField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/WcfWebApp.Models")]
    public partial class Item : object
    {
        
        private int IdField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImageData", Namespace="http://schemas.datacontract.org/2004/07/WcfWebApp.Models")]
    public partial class ImageData : object
    {
        
        private string FileNameField;
        
        private byte[] ImageContentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName
        {
            get
            {
                return this.FileNameField;
            }
            set
            {
                this.FileNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageContent
        {
            get
            {
                return this.ImageContentField;
            }
            set
            {
                this.ImageContentField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IService1")]
public interface IService1
{
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/DoWork", ReplyAction="http://tempuri.org/IService1/DoWorkResponse")]
    System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
    
    void EndDoWork(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetUsers", ReplyAction="http://tempuri.org/IService1/GetUsersResponse")]
    System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
    
    WcfWebApp.Models.User[] EndGetUsers(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetTasks", ReplyAction="http://tempuri.org/IService1/GetTasksResponse")]
    System.IAsyncResult BeginGetTasks(int userId, System.AsyncCallback callback, object asyncState);
    
    WcfWebApp.Models.TaskList EndGetTasks(System.IAsyncResult result);
    
    [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UploadImage", ReplyAction="http://tempuri.org/IService1/UploadImageResponse")]
    System.IAsyncResult BeginUploadImage(WcfWebApp.Models.ImageData imageData, System.AsyncCallback callback, object asyncState);
    
    bool EndUploadImage(System.IAsyncResult result);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IService1Channel : IService1, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WcfWebApp.Models.User[] Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WcfWebApp.Models.User[])(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class GetTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public GetTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public WcfWebApp.Models.TaskList Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((WcfWebApp.Models.TaskList)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class UploadImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
{
    
    private object[] results;
    
    public UploadImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState)
    {
        this.results = results;
    }
    
    public bool Result
    {
        get
        {
            base.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class Service1Client : System.ServiceModel.ClientBase<IService1>, IService1
{
    
    private BeginOperationDelegate onBeginDoWorkDelegate;
    
    private EndOperationDelegate onEndDoWorkDelegate;
    
    private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetUsersDelegate;
    
    private EndOperationDelegate onEndGetUsersDelegate;
    
    private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
    
    private BeginOperationDelegate onBeginGetTasksDelegate;
    
    private EndOperationDelegate onEndGetTasksDelegate;
    
    private System.Threading.SendOrPostCallback onGetTasksCompletedDelegate;
    
    private BeginOperationDelegate onBeginUploadImageDelegate;
    
    private EndOperationDelegate onEndUploadImageDelegate;
    
    private System.Threading.SendOrPostCallback onUploadImageCompletedDelegate;
    
    private BeginOperationDelegate onBeginOpenDelegate;
    
    private EndOperationDelegate onEndOpenDelegate;
    
    private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
    
    private BeginOperationDelegate onBeginCloseDelegate;
    
    private EndOperationDelegate onEndCloseDelegate;
    
    private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
    
    public Service1Client()
    {
    }
    
    public Service1Client(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public Service1Client(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public System.Net.CookieContainer CookieContainer
    {
        get
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                return httpCookieContainerManager.CookieContainer;
            }
            else
            {
                return null;
            }
        }
        set
        {
            System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
            if ((httpCookieContainerManager != null))
            {
                httpCookieContainerManager.CookieContainer = value;
            }
            else
            {
                throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                        "ookieContainerBindingElement.");
            }
        }
    }
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
    
    public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
    
    public event System.EventHandler<GetTasksCompletedEventArgs> GetTasksCompleted;
    
    public event System.EventHandler<UploadImageCompletedEventArgs> UploadImageCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
    
    public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginDoWork(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginDoWork(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    void IService1.EndDoWork(System.IAsyncResult result)
    {
        base.Channel.EndDoWork(result);
    }
    
    private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IService1)(this)).BeginDoWork(callback, asyncState);
    }
    
    private object[] OnEndDoWork(System.IAsyncResult result)
    {
        ((IService1)(this)).EndDoWork(result);
        return null;
    }
    
    private void OnDoWorkCompleted(object state)
    {
        if ((this.DoWorkCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void DoWorkAsync()
    {
        this.DoWorkAsync(null);
    }
    
    public void DoWorkAsync(object userState)
    {
        if ((this.onBeginDoWorkDelegate == null))
        {
            this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
        }
        if ((this.onEndDoWorkDelegate == null))
        {
            this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
        }
        if ((this.onDoWorkCompletedDelegate == null))
        {
            this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
        }
        base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginGetUsers(System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetUsers(callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WcfWebApp.Models.User[] IService1.EndGetUsers(System.IAsyncResult result)
    {
        return base.Channel.EndGetUsers(result);
    }
    
    private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((IService1)(this)).BeginGetUsers(callback, asyncState);
    }
    
    private object[] OnEndGetUsers(System.IAsyncResult result)
    {
        WcfWebApp.Models.User[] retVal = ((IService1)(this)).EndGetUsers(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetUsersCompleted(object state)
    {
        if ((this.GetUsersCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetUsersAsync()
    {
        this.GetUsersAsync(null);
    }
    
    public void GetUsersAsync(object userState)
    {
        if ((this.onBeginGetUsersDelegate == null))
        {
            this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
        }
        if ((this.onEndGetUsersDelegate == null))
        {
            this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
        }
        if ((this.onGetUsersCompletedDelegate == null))
        {
            this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
        }
        base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginGetTasks(int userId, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginGetTasks(userId, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    WcfWebApp.Models.TaskList IService1.EndGetTasks(System.IAsyncResult result)
    {
        return base.Channel.EndGetTasks(result);
    }
    
    private System.IAsyncResult OnBeginGetTasks(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        int userId = ((int)(inValues[0]));
        return ((IService1)(this)).BeginGetTasks(userId, callback, asyncState);
    }
    
    private object[] OnEndGetTasks(System.IAsyncResult result)
    {
        WcfWebApp.Models.TaskList retVal = ((IService1)(this)).EndGetTasks(result);
        return new object[] {
                retVal};
    }
    
    private void OnGetTasksCompleted(object state)
    {
        if ((this.GetTasksCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.GetTasksCompleted(this, new GetTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void GetTasksAsync(int userId)
    {
        this.GetTasksAsync(userId, null);
    }
    
    public void GetTasksAsync(int userId, object userState)
    {
        if ((this.onBeginGetTasksDelegate == null))
        {
            this.onBeginGetTasksDelegate = new BeginOperationDelegate(this.OnBeginGetTasks);
        }
        if ((this.onEndGetTasksDelegate == null))
        {
            this.onEndGetTasksDelegate = new EndOperationDelegate(this.OnEndGetTasks);
        }
        if ((this.onGetTasksCompletedDelegate == null))
        {
            this.onGetTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTasksCompleted);
        }
        base.InvokeAsync(this.onBeginGetTasksDelegate, new object[] {
                    userId}, this.onEndGetTasksDelegate, this.onGetTasksCompletedDelegate, userState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    System.IAsyncResult IService1.BeginUploadImage(WcfWebApp.Models.ImageData imageData, System.AsyncCallback callback, object asyncState)
    {
        return base.Channel.BeginUploadImage(imageData, callback, asyncState);
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    bool IService1.EndUploadImage(System.IAsyncResult result)
    {
        return base.Channel.EndUploadImage(result);
    }
    
    private System.IAsyncResult OnBeginUploadImage(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        WcfWebApp.Models.ImageData imageData = ((WcfWebApp.Models.ImageData)(inValues[0]));
        return ((IService1)(this)).BeginUploadImage(imageData, callback, asyncState);
    }
    
    private object[] OnEndUploadImage(System.IAsyncResult result)
    {
        bool retVal = ((IService1)(this)).EndUploadImage(result);
        return new object[] {
                retVal};
    }
    
    private void OnUploadImageCompleted(object state)
    {
        if ((this.UploadImageCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.UploadImageCompleted(this, new UploadImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void UploadImageAsync(WcfWebApp.Models.ImageData imageData)
    {
        this.UploadImageAsync(imageData, null);
    }
    
    public void UploadImageAsync(WcfWebApp.Models.ImageData imageData, object userState)
    {
        if ((this.onBeginUploadImageDelegate == null))
        {
            this.onBeginUploadImageDelegate = new BeginOperationDelegate(this.OnBeginUploadImage);
        }
        if ((this.onEndUploadImageDelegate == null))
        {
            this.onEndUploadImageDelegate = new EndOperationDelegate(this.OnEndUploadImage);
        }
        if ((this.onUploadImageCompletedDelegate == null))
        {
            this.onUploadImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadImageCompleted);
        }
        base.InvokeAsync(this.onBeginUploadImageDelegate, new object[] {
                    imageData}, this.onEndUploadImageDelegate, this.onUploadImageCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
    }
    
    private object[] OnEndOpen(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
        return null;
    }
    
    private void OnOpenCompleted(object state)
    {
        if ((this.OpenCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void OpenAsync()
    {
        this.OpenAsync(null);
    }
    
    public void OpenAsync(object userState)
    {
        if ((this.onBeginOpenDelegate == null))
        {
            this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
        }
        if ((this.onEndOpenDelegate == null))
        {
            this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
        }
        if ((this.onOpenCompletedDelegate == null))
        {
            this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
        }
        base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
    }
    
    private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
    {
        return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
    }
    
    private object[] OnEndClose(System.IAsyncResult result)
    {
        ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
        return null;
    }
    
    private void OnCloseCompleted(object state)
    {
        if ((this.CloseCompleted != null))
        {
            InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
            this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
        }
    }
    
    public void CloseAsync()
    {
        this.CloseAsync(null);
    }
    
    public void CloseAsync(object userState)
    {
        if ((this.onBeginCloseDelegate == null))
        {
            this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
        }
        if ((this.onEndCloseDelegate == null))
        {
            this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
        }
        if ((this.onCloseCompletedDelegate == null))
        {
            this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
        }
        base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
    }
    
    protected override IService1 CreateChannel()
    {
        return new Service1ClientChannel(this);
    }
    
    private class Service1ClientChannel : ChannelBase<IService1>, IService1
    {
        
        public Service1ClientChannel(System.ServiceModel.ClientBase<IService1> client) : 
                base(client)
        {
        }
        
        public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
            return _result;
        }
        
        public void EndDoWork(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            base.EndInvoke("DoWork", _args, result);
        }
        
        public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[0];
            System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
            return _result;
        }
        
        public WcfWebApp.Models.User[] EndGetUsers(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WcfWebApp.Models.User[] _result = ((WcfWebApp.Models.User[])(base.EndInvoke("GetUsers", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginGetTasks(int userId, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = userId;
            System.IAsyncResult _result = base.BeginInvoke("GetTasks", _args, callback, asyncState);
            return _result;
        }
        
        public WcfWebApp.Models.TaskList EndGetTasks(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            WcfWebApp.Models.TaskList _result = ((WcfWebApp.Models.TaskList)(base.EndInvoke("GetTasks", _args, result)));
            return _result;
        }
        
        public System.IAsyncResult BeginUploadImage(WcfWebApp.Models.ImageData imageData, System.AsyncCallback callback, object asyncState)
        {
            object[] _args = new object[1];
            _args[0] = imageData;
            System.IAsyncResult _result = base.BeginInvoke("UploadImage", _args, callback, asyncState);
            return _result;
        }
        
        public bool EndUploadImage(System.IAsyncResult result)
        {
            object[] _args = new object[0];
            bool _result = ((bool)(base.EndInvoke("UploadImage", _args, result)));
            return _result;
        }
    }
}
